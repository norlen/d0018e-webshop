import { GetStaticProps, GetStaticPaths } from "next";
import Head from "next/head";
import Image from "next/image";

import type { NextPage } from "next";
import { getProducerById, Producer } from "@lib/db/producer";
import React from "react";
import { getProductsByProducerId, Product } from "@lib/db/products";
import ProductSmall from "@components/products/productSmall";
import { LocationMarkerIcon, MailIcon } from "@heroicons/react/outline";

type StaticProps = {
  producer: Producer;
  products: Product[];
};

const ProducerPage: NextPage<StaticProps> = ({ producer, products }) => {
  return (
    <>
      <Head>
        <title>Sebbes ekologiska - {producer.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="px-12 py-12 justify-center mx-auto flex flex-col gap-8">
        <div className="max-w-5xl w-full bg-white rounded-lg shadow-lg overflow-hidden mx-auto relative">
          <div className="relative h-96">
            <Image
              layout="fill"
              className="object-cover object-top"
              src={producer.image_url}
              alt={producer.name}
            />
          </div>

          <div className="max-w-lg flex flex-col gap-2 px-6 py-4 mx-auto">
            <h1 className="text-xl font-semibold text-gray-800">
              {producer.name}
            </h1>

            <p className="text-gray-700 mb-4">{producer.description}</p>

            <div className="flex gap-8">
              <div className="flex items-center text-gray-700">
                <LocationMarkerIcon className="w-6 h-6 text-green-400" />
                <h3 className="px-2 text-sm">{producer.location}</h3>
              </div>
              <div className="flex items-center text-gray-700">
                <MailIcon className="w-6 h-6 text-green-400" />
                <h3 className="px-2 text-sm">{producer.contact}</h3>
              </div>
            </div>
          </div>
        </div>
        <div className="bg-white rounded-lg shadow-lg py-8 px-12">
          <h1 className="font-semibold text-3xl text-green-500 mb-8">
            Här är våra fantastiska produkter
          </h1>
          <div className="flex flex-wrap gap-10 justify-center">
            {products.length > 0 ? (
              products.map((product) => {
                return <ProductSmall key={product.id} product={product} />;
              })
            ) : (
              <h1>Tyvärr har vi inga produkter än...</h1>
            )}
          </div>
        </div>
      </main>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  if (!(params && params.producer && typeof params.producer === "string")) {
    return { notFound: true };
  }

  let producer = await getProducerById(params.producer);
  let products = await getProductsByProducerId(params.producer);

  // The producer might not have any products for sale
  if (products.length === 0) {
    products = [];
  }
  if (producer === undefined) {
    return { notFound: true };
  }

  return {
    props: { producer, products },
    revalidate: 60,
  };
};

export default ProducerPage;
