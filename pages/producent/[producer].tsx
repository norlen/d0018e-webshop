import { GetStaticProps, GetStaticPaths } from "next";
import Head from "next/head";
import Image from "next/image";

import type { NextPage } from "next";
import { getProducerById, Producer } from "@lib/db/producer";
import React from "react";
import { getProductsByProducerId, Product } from "@lib/db/products";
import ProductSmall from "@components/products/productSmall";

type StaticProps = {
  producer: Producer;
  products: Product[];
};

const ProducerPage: NextPage<StaticProps> = ({ producer, products }) => {
  return (
    <>
      <Head>
        <title>Sebbes ekologiska - {producer.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex py-2 lg:py-8 lg:px-12 justify-center">
        <div className="w-full">
          {/*  Profile banner and avatar */}
          <div className="w-full">
            <div className="w-full bg-green-400 h-48 rounded-t-lg"></div>
            <div className="absolute -mt-20 ml-5">
              <div className="bg-gray-200 border border-gray-300 h-36 w-40 rounded-lg shadow-md border-b border-primary">
                <Image
                  src={producer.image_url}
                  alt={producer.name}
                  layout="fill"
                  className="w-full h-full object-center object-cover"
                />
              </div>
            </div>
          </div>

          {/* Profile general information */}
          <div className="bg-primary border border-primary rounded-b-lg p-5 pt-20 flex flex-col">
            <div className="mb-1 h-5 w-90">{producer.name}</div>
            <div className="mb-1 h-5 w-96">LastName?</div>
            <div className="mb-1 h-5 w-44">Here are our products:</div>

            <div className="flex flex-wrap gap-10 justify-center">
              {products.length > 0 ? (
                products.map((product) => {
                  return <ProductSmall key={product.id} product={product} />;
                })
              ) : (
                <h1>Tyvärr har vi inga produkter än...</h1>
              )}
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  if (!(params && params.producer && typeof params.producer === "string")) {
    return { notFound: true };
  }

  let producer = await getProducerById(params.producer);
  let products = await getProductsByProducerId(params.producer);

  // The producer might not have any products for sale
  if (products.length === 0) {
    products = [];
  }
  if (producer === undefined) {
    return { notFound: true };
  }

  return {
    props: { producer, products },
    revalidate: 60,
  };
};

export default ProducerPage;
